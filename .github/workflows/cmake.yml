name: Build-Test

on:
  push:
    branches:
      - develop
      - feature/**
  pull_request:
    branches: [ develop ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  QT_VERSION: 5.12.11

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - name: Pull source code
      # This step must be the first step cause it would clean the workspace
      uses: actions/checkout@v2

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '${{env.QT_VERSION}}'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2017_64'
        # Let the Qt installed on "$RUNNER_WORKSPACE (this is one folder above the starting directory)"
        # dir: '${{github.workspace}}/3rdlibs'
        cached: 'false'
        setup-python: 'true'
        set-env: 'true'
        tools-only: 'false'
        aqtversion: '==1.2.5'
        py7zrversion: '==0.16.1'
        extra: '--external 7z'

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      working-directory: ${{github.workspace}}
      run: |
        cmake -B${{github.workspace}}/build/Debug -DCMAKE_BUILD_TYPE=Debug
        cmake -B${{github.workspace}}/build/RelWithDebInfo -DCMAKE_BUILD_TYPE=RelWithDebInfo
        cmake -B${{github.workspace}}/build/UnitTest -DCMAKE_BUILD_TYPE=RelWithDebInfo -DDC_ENABLE_UNITTEST=true -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install/UnitTest

    - name: Build
      # Build your program with the given configuration
      working-directory: ${{github.workspace}}/build
      run: |
        cmake --build ${{github.workspace}}/build/Debug --config Debug
        cmake --build ${{github.workspace}}/build/RelWithDebInfo --config RelWithDebInfo
        cmake --build ${{github.workspace}}/build/UnitTest --config RelWithDebInfo

    - name: Install
      # Install your program with the given configuration
      working-directory: ${{github.workspace}}/build/UnitTest
      run: |
        cmake --install ${{github.workspace}}/build/UnitTest --config RelWithDebInfo

    - name: Test
      working-directory: ${{github.workspace}}/build/UnitTest
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
       ctest -T test --output-on-failure --stop-on-failure --no-tests=error

